{"version":3,"sources":["components/main.js","components/search.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","Component","htmlDecode","input","e","document","innerHTML","childNodes","length","nodeValue","NumberList","props","sItems","items","makeFav","favourite","listItems","map","item","key","title","onClick","favour","dangerouslySetInnerHTML","__html","body","FavList","Search","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","scrolled","scrolledHead","searchedItems","data","valueSearch","favList","searchActive","handleClick","bind","assertThisInitialized","handleChange","handleFav","handleSearch","event","target","value","name","setState","defineProperty","keyCode","preventDefault","searchQuery","sortedArray","filter","choice","keywords","includes","favItem","newFavouriteArray","snewFavouriteArray","push","request","XMLHttpRequest","open","responseType","onload","wasteList","response","send","id","type","required","placeholder","onChange","onKeyDown","disabled","App","main","search","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.36f68fff.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\n\r\n\r\nclass Header extends Component {\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <header>\r\n                <div className=\"headerLine\">\r\n                    <h1>Toronto Waste Lookup</h1>\r\n                </div>\r\n            </header>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\n\r\n\r\n//fixing the display of body(description) of items\r\nfunction htmlDecode(input){\r\n    let e = document.createElement('div');\r\n    e.innerHTML = input;\r\n    return e.childNodes.length === 0 ? \"\" : e.childNodes[0].nodeValue;\r\n}\r\n\r\n//displaying items from search query\r\nfunction NumberList(props) {\r\n    let sItems = props.items;\r\n    let makeFav = props.favourite;\r\n    let listItems = sItems.map((item) =>\r\n        <div className=\"searchItem\" key={item.title}>\r\n            <div className=\"fav\"  onClick={() => makeFav(item)}>\r\n                <i className={(item.favour ? \"fas fa-star starGreen\" : \"fas fa-star starGrey\")}> </i>\r\n            </div>\r\n            <div className=\"searchName\">\r\n                <p>{item.title}</p>\r\n            </div>\r\n            <div className=\"searchDescription\" >\r\n                <div dangerouslySetInnerHTML={{__html: htmlDecode(item.body)}} />\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n    return (\r\n        <div className=\"items\">\r\n            {listItems}\r\n            <div className={sItems.length === 0 ? \"textVisible\" : \"textNotVisible\"}>Nothing to display. Try searching now!</div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n//displaying favourite list\r\nfunction FavList(props) {\r\n    let sItems = props.items;\r\n    let makeFav = props.favourite;\r\n    let listItems = sItems.map((item) =>\r\n        <div className=\"searchItem\" key={item.title}>\r\n            <div className=\"fav\" onClick={() => makeFav(item)}>\r\n                <i className={(item.favour ? \"fas fa-star starGreen\" : \"fas fa-star starGrey\")}> </i>\r\n            </div>\r\n            <div className=\"searchName\">\r\n                <p>{item.title}</p>\r\n            </div>\r\n            <div className=\"searchDescription\">\r\n                <div dangerouslySetInnerHTML={{__html: htmlDecode(item.body)}} />\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n    return (\r\n        <div className=\"items\">\r\n            {listItems}\r\n            <div className={sItems.length === 0 ? \"textVisible\" : \"textNotVisible\"}>Your favourite list is empty!</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nclass Search extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            scrolled: false,\r\n            scrolledHead: false,\r\n            searchedItems: [],\r\n            data: null,\r\n            valueSearch: '',\r\n            favList: [],\r\n            searchActive: false\r\n        };\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleFav = this.handleFav.bind(this);\r\n        this.handleSearch = this.handleSearch.bind(this);\r\n\r\n    }\r\n\r\n\r\n    //saving the value of the input\r\n    handleChange(event){\r\n        const target = event.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n        if(value === \"\"){\r\n            this.setState({\r\n                searchedItems: [],\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    //on pressing Enter do the search\r\n    handleSearch(event){\r\n        if(event.keyCode === 13){\r\n            this.handleClick(event);\r\n        }\r\n    }\r\n\r\n\r\n    //on clicking the button do the search\r\n    handleClick(event){\r\n        event.preventDefault();\r\n        let searchQuery = this.state.valueSearch;\r\n        let sortedArray = this.state.data.filter(function(choice){\r\n                return choice.keywords.includes(searchQuery);\r\n            });\r\n        this.setState({\r\n            searchedItems: sortedArray\r\n        })\r\n    }\r\n\r\n\r\n    //managing the favourite list\r\n    handleFav(favItem){\r\n        let newFavouriteArray = this.state.favList;\r\n        if(newFavouriteArray.includes(favItem)){\r\n            favItem.favour = false;\r\n            let snewFavouriteArray = newFavouriteArray.filter(item => item.title !== favItem.title);\r\n            this.setState({\r\n                favList: snewFavouriteArray\r\n            })\r\n        }else{\r\n            favItem.favour = true;\r\n            newFavouriteArray.push(favItem);\r\n            this.setState({\r\n                favList: newFavouriteArray\r\n            })\r\n        }\r\n    }\r\n    //loading the JSON file as the component loads\r\n    componentDidMount() {\r\n        let requestURL = 'https://secure.toronto.ca/cc_sr_v1/data/swm_waste_wizard_APR?limit=1000';\r\n        let request = new XMLHttpRequest();\r\n        request.open('GET', requestURL);\r\n        request.responseType = 'json';\r\n        request.onload = function() {\r\n            let wasteList = request.response;\r\n            this.setState({\r\n                data: wasteList,\r\n                searchActive: true\r\n            })\r\n        }.bind(this);\r\n        request.send();\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <main>\r\n                <div className=\"container containerSearch\">\r\n                    <div>\r\n                        <div id=\"searchForm\">\r\n                            <input type=\"text\" id=\"search\" name=\"valueSearch\" required placeholder=\"Search..\"   onChange={this.handleChange} onKeyDown={this.handleSearch}/>\r\n                            <button type=\"submit\" onClick={this.handleClick} disabled={!this.state.searchActive}><i className=\"fas fa-search\"> </i></button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"searchField\">\r\n                    <div className=\"container\">\r\n                        <NumberList items={this.state.searchedItems} favourite={this.handleFav}/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"favouritesField\">\r\n                    <div className=\"container\">\r\n                        <h2>Favourites <span className={this.state.favList.length === 0 ? \"textNotVisible\" : \"counter\"}>{this.state.favList.length}</span></h2>\r\n                        <FavList items={this.state.favList} favourite={this.handleFav}/>\r\n                    </div>\r\n                </div>\r\n            </main>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default Search;","import React, { Component } from 'react';\nimport './App.css';\nimport Header from './components/main'\nimport Search from './components/search'\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Header></Header>\n        <Search></Search>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}